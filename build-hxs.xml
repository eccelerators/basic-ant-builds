<?xml version="1.0" encoding="UTF-8"?>
<project name="HxS">
	
	<condition property="is_windows">
		<os family="windows" />
	</condition>
	
	<property name="python-executable" value="python"/>
	<property name="HXS_BUS_TYPE" value="wishbone"/>

	<property name="copyright" value="2023, ICC Intelligent Platforms GmbH" />
	<property name="author" value="ICC Intelligent Platforms GmbH" />
	<property name="version" value="(${env.CI_COMMIT_REF_NAME} - ${env.CI_COMMIT_SHORT_SHA})" />
	<property name="release" value="(${env.CI_COMMIT_REF_NAME} - ${env.CI_COMMIT_SHORT_SHA})" />
	
	
	<basename property="eccelerators-book.basename" file="${basedir}" />
	<property name="gen.filename.stem" value="emerson.pac.${ant.project.name}"/>
	<property name="fo-gen.pdf.filename" value="${gen.filename.stem}.pdf" />

	<property name="sphinx.rst.folderpath" value="${basedir}/src/docs"/>

	<property name="docbook.xml.filename" value="docbook" />
	<property name="docbook.xml.language" value="en" />
	<property name="eccelerators-book.outputfolder.pdf" value="${basedir}/src-gen/docbook-pdf" />
	<property name="eccelerators-book.outputfolder.html" value="${basedir}/src-gen/docbook-html" />

	
	<!-- Properties -->
	<property name="dir.classpath.xslt" value="${basedir}/submodules/eccelerators-docbook/customization/resources/xslt-classpath" />
	<property name="dir.docbook.xml" value="${basedir}/submodules/eccelerators-docbook/source/${docbook.xml.language}" />
	<property name="dir.docbook.xsl" value="${basedir}/submodules/eccelerators-docbook/customization/resources/docbook-xsl-ns" />
	<property name="dir.target" value="${basedir}/submodules/eccelerators-docbook/target/${docbook.xml.language}" />

	<property name="docbook.xml.file" value="${docbook.xml.filename}.xml" />

	<property name="docbook.xsl.catalog" value="${dir.docbook.xsl}/catalog.xml" />

	<property name="docbook.xsl.html5" value="${dir.docbook.xsl}/xhtml5/onechunk.xsl" />
	<property name="dir.assets.html5" value="${basedir}/submodules/eccelerators-docbook/customization/resources/assets" />


	<property name="eccelerators-book.xsl.html5" value="${dir.docbook.xsl}/customization/eccelerators-book/eccelerators-book-html.xsl" />
	<property name="docbook.xsl.html5" value="${dir.docbook.xsl}/xhtml5/onechunk.xsl" />
	<property name="dir.assets.html5" value="${basedir}/submodules/customization/resources/assets" />

	<property name="eccelerators-book.xsl.xsl-fo" value="${dir.docbook.xsl}/customization/eccelerators-book/eccelerators-book-fo.xsl" />
	<property name="docbook.xsl.xsl-fo" value="${dir.docbook.xsl}/fo/docbook.xsl" />
	<property name="dir.assets.xsl-fo" value="${basedir}/submodules/eccelerators-docbook/customization/resources/assets" />

	<property name="fop.user.configuration.file" value="${basedir}/submodules/eccelerators-docbook/customization/resources/fop-user-configuration.xml" />

	<!-- Classpath -->
	<path id="classpath.xslt">
		<fileset dir="${dir.classpath.xslt}">
			<include name="**/*.jar" />
		</fileset>
	</path>	
	
	<!-- Tasks -->
	<taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop" classpathref="classpath.xslt" />

	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
	  <classpath>
	    <pathelement location="${basedir}/submodules/basic-ant-builds/ant-contrib-0.6.jar"/>
	  </classpath>
	</taskdef>
	
	<target name="hxs-all" depends="
		hxs-clean,
		hxs-hxs2vhdl,
		hxs-hxs2c,
		hxs-hxs2simstm,
		hxs-hxs2python,
		hxs-hxs2rst,
		hxs-rst2html-sphinx,
		hxs-rst2docbook,
		hxs-docbook2pdf
		" description="compile all" />
	
	<target name="hxs-clean" depends="hxs-clean-docbook" description="Delete all previously generated result files">
		<delete dir="tmp-gen" failonerror="false"/>
		<delete dir="src-gen" failonerror="false"/>
	</target>
	
	<!-- Delete the target directory and copied sources -->
	<target name="hxs-clean-docbook">
		<delete dir="${basedir}/eccelerators-docbook/target" />
		<delete dir="${dir.docbook.xml}/resources" />
        <delete dir="sphinx_docbook" failonerror="false"/>
	</target>
	
	<!-- Generate a -XSL-FO file -->
	<target name="-XSL-FO">
		<delete dir="${dir.target}/xsl-fo" failonerror="false"/>
		<xslt style="${eccelerators-book.xsl.xsl-fo}" basedir="${dir.docbook.xml}" includes="**/${docbook.xml.file}" destdir="${dir.target}/xsl-fo" extension=".fo" classpathref="classpath.xslt" force="true" >

			<sysproperty key="javax.xml.transform.TransformerFactory" value="com.icl.saxon.TransformerFactoryImpl" />
			<sysproperty key="org.apache.xerces.xni.parser.XMLParserConfiguration" value="org.apache.xerces.parsers.XIncludeParserConfiguration" />
			<sysproperty key="xslthl.config" value="file://${dir.docbook.xsl}/highlighting/xslthl-config.xml" />
			<sysproperty key="xml.parsers.SAXParserFactory" value="org.apache.xerces.jaxp.SAXParserFactoryImpl" />
			<sysproperty key="xml.catalog.files" value="${docbook.xsl.catalog}" />
			<sysproperty key="xml.catalog.prefer" value="system"/>

			<param if="docbook.collection.glossary" name="glossary.collection" expression="${docbook.collection.glossary}" />
			<param if="docbook.collection.bibliography" name="bibliography.collection" expression="${docbook.collection.bibliography}" />

			<param name="keep.relative.image.uris" expression="1" />
			<param name="fop.extensions" expression="0"/>
			<param name="fop1.extensions" expression="1"/>
			<param name="use.extensions" expression="1" />
			<param name="graphicsize.extension" expression="0" />
			<param name="hyphenate" expression="true" />
			<param name="admon.graphics" expression="1" />
			<param name="admon.textlabel" expression="1" />
			<param name="admon.graphics.extension" expression=".svg" />
			<param name="admon.graphics.path" expression="assets/images/" />
			<param name="callout.graphics" expression="1" />
			<param name="callout.graphics.extension" expression=".svg" />
			<param name="callout.graphics.path" expression="assets/images/callouts/" />
			<param name="section.autolabel" expression="1" />
			<param name="section.label.includes.component.label" expression="1" />

		</xslt>
		<copy todir="${dir.target}/xsl-fo" >
			<fileset dir="${dir.docbook.xml}/">
				<include name="**/resources/**/*" />
			</fileset>
		</copy>
		<copy todir="${dir.target}/xsl-fo/assets">
			<fileset dir="${dir.assets.xsl-fo}/">
				<include name="**/*" />
			</fileset>
		</copy>
	</target>
	
	<target name="hxs-docbook2pdf" depends="hxs-clean-docbook, collect-sources-for-docbook-pdf-transformation, -XSL-FO" description="Generate a PDF file" >
		<delete dir="${eccelerators-book.outputfolder.pdf}" failonerror="false" />
		<fop format="application/pdf" basedir="${dir.target}/xsl-fo" outdir="${dir.target}" force="true" messagelevel="verbose" throwexceptions="true" userconfig="${fop.user.configuration.file}" >
			<fileset dir="${dir.target}">
				<include name="**/*.fo" />
			</fileset>
		</fop>
		<move todir="${dir.target}">
			<fileset dir="${dir.target}/xsl-fo">
				<include name="**/*.pdf"/>
			</fileset>
		</move>
		<copy file="${dir.target}/${docbook.xml.filename}.pdf" tofile="${eccelerators-book.outputfolder.pdf}/${fo-gen.pdf.filename}" />
	</target>
	
	<target name="hxs-docbook2html" depends="hxs-clean-docbook, collect-sources-for-docbook-transformation" description="Generate a HTML5 file" >
		<delete dir="${eccelerators-book.outputfolder.html}" />
		<xslt style="${eccelerators-book.xsl.html5}" basedir="${dir.docbook.xml}" includes="**/${docbook.xml.file}" destdir="${dir.target}/html5" extension=".tmp" classpathref="classpath.xslt" force="true" >
			<sysproperty key="xml.parsers.SAXParserFactory" value="org.apache.xerces.jaxp.SAXParserFactoryImpl" />
			<sysproperty key="org.apache.xerces.xni.parser.XMLParserConfiguration" value="org.apache.xerces.parsers.XIncludeParserConfiguration" />
			<sysproperty key="javax.xml.transform.TransformerFactory" value="com.icl.saxon.TransformerFactoryImpl" />
			<sysproperty key="xslthl.config" value="file://${dir.docbook.xsl}/highlighting/xslthl-config.xml" />
			<sysproperty key="xml.catalog.files" value="${docbook.xsl.catalog}" />
			<param if="docbook.collection.glossary" name="glossary.collection" expression="${docbook.collection.glossary}" />
			<param if="docbook.collection.bibliography" name="bibliography.collection" expression="${docbook.collection.bibliography}" />
			<param name="base.dir" expression="${dir.target}/html5" />
			<param name="docbook.css.link" expression="0" />
			<param name="docbook.css.source" expression="" />
			<param name="html.cleanup" expression="1" />
			<param name="html.stylesheet" expression="" />
			<param name="make.valid.html" expression="1" />
			<param name="make.clean.html" expression="0" />
			<param name="suppress.navigation" expression="1" />
			<param name="generate.toc" expression="appendix nop article nop chapter nop part nop section nop set nop" />
			<param name="use.extensions" expression="1" />
			<param name="graphicsize.extension" expression="0" />
			<param name="hyphenate" expression="true" />
			<param name="default.table.width" expression="100%" />
			<param name="admon.graphics" expression="1" />
			<param name="admon.textlabel" expression="1" />
			<param name="admon.graphics.extension" expression=".svg" />
			<param name="admon.graphics.path" expression="assets/images/" />
			<param name="callout.graphics" expression="1" />
			<param name="callout.graphics.extension" expression=".svg" />
			<param name="callout.graphics.path" expression="assets/images/callouts/" />
		</xslt>
		<delete file="${dir.target}/html5/${docbook.xml.filename}.tmp" />
		<copy todir="${dir.target}/html5/assets">
			<fileset dir="${dir.assets.html5}/">
				<include name="**/*" />
			</fileset>
		</copy>
		<copy todir="${dir.target}/html5" >
			<fileset dir="${dir.docbook.xml}">
				<include name="**/resources/**/*" />
			</fileset>
		</copy>

		<copy todir="${eccelerators-book.outputfolder.html}">
			<fileset dir="${dir.target}/html5">
				<include name="**/*" />
			</fileset>
		</copy>

	</target>
		
	<!-- Prepare Sphinx project from template in tmp-gen folder -->
	<target name="prepare-sphinx-transformation" >
		<delete failonerror="false" includeemptydirs="true">
			<fileset dir="tmp-gen">
				<include name="**/*" />
			</fileset>
		</delete>
		<copy todir="tmp-gen/source">
			<fileset dir="submodules/sphinx-template/source">
				<include name="**/*" />
			</fileset>
		</copy>
	</target>
	
	<!-- Collect all sources and resources for Sphinx project in tmp-gen folder -->
	<target name="collect-sources-for-sphinx-transformation" depends="prepare-sphinx-transformation">
		<copy todir="tmp-gen/source">
			<fileset dir="src/rst">
				<include name="**/*.rst" />				
			</fileset>
		</copy>
		<copy todir="tmp-gen/source">
			<fileset dir="src-gen/rst">
				<include name="**/*.rst" />
			</fileset>
		</copy>
		<copy todir="tmp-gen/source/src/rst/resources" failonerror="false">
			<fileset dir="src/rst/resources">
				<include name="**/*.png" />
			</fileset>
		</copy>
		<copy todir="tmp-gen/source/hxs/resources" failonerror="false">
			<fileset dir="hxs/resources">
				<include name="**/*.png" />
			</fileset>
		</copy>
		<copy todir="tmp-gen/source/src-gen/c">
			<fileset dir="src-gen/c">
				<include name="**/*.h" />
			</fileset>
		</copy>
		<copy todir="tmp-gen/source/src-gen/python">
			<fileset dir="src-gen/python">
				<include name="**/*.py" />
			</fileset>
		</copy>
		<copy todir="tmp-gen/source/src-gen/simstm">
			<fileset dir="src-gen/simstm">
				<include name="**/*.stm" />
			</fileset>
		</copy>
	</target>
		
	<target name="hxs-rst2html-sphinx" depends="collect-sources-for-sphinx-transformation" description="Build html description from rst with Sphinx">	
		<exec executable="${python-executable}">
			<arg value="-m" />
			<arg value="sphinx" />
			<arg value="-b" />
			<arg value="html" />
			<arg value="tmp-gen/source" />
			<arg value="tmp-gen/build" />
		</exec>  
		<copy todir="src-gen/html-sphinx">
			<fileset dir="tmp-gen/build">
				<include name="**/*" />
			</fileset>
		</copy>		
	</target>
	
	<target name="hxs-rst2docbook" depends="collect-sources-for-sphinx-transformation" description="Build docbook description from rst with Sphinx">
		<delete dir="src-gen/docbook" failonerror="false"/>
		<copy todir="sphinx_docbook">
			<fileset dir="submodules/sphinx_docbook">
				<include name="**/*" />
				<exclude name=".git"/>
			</fileset>
		</copy>			
		<exec executable="${python-executable}">
			<arg value="-m" />
			<arg value="sphinx" />
			<arg value="-b" />
			<arg value="docbook" />
			<arg value="-D" />
            <arg value="extensions=sphinx_docbook.docbook_builder" />
			<arg value="tmp-gen/source" />
			<arg value="tmp-gen/build" />
		</exec>
	    <delete dir="sphinx_docbook" failonerror="false"/>
		<copy todir="src-gen/docbook">
			<fileset dir="src/docbook">
				<include name="**/*" />
			</fileset>
		</copy>	
		<copy todir="src-gen/docbook">
			<fileset dir="tmp-gen/build">
				<include name="**/*" />
				<exclude name="index.xml" />
			</fileset>
		</copy>	
		<copy todir="src-gen/docbook/resources">
			<fileset dir="tmp-gen/source/resources">
				<include name="**/*" />
			</fileset>
		</copy>		
	</target>
	
	<!-- Build xml description from rst with Sphinx 
	     hidden since not gnerally used but kept for potential analysis of problems -->
	<target name="hxs-rst2xml" depends="collect-sources-for-sphinx-transformation">	
		<exec executable="${python-executable}">
			<arg value="-m" />
			<arg value="sphinx" />
			<arg value="-b" />
			<arg value="xml" />
			<arg value="tmp-gen/source" />
			<arg value="tmp-gen/build" />
		</exec> 
		<copy todir="src-gen/xml-sphinx">
			<fileset dir="tmp-gen/build">
				<include name="**/*" />
			</fileset>
		</copy>
		<copy todir="src-gen/docbook-sphinx/resources">
			<fileset dir="tmp-gen/source/resources">
				<include name="**/*" />
			</fileset>
		</copy>		
	</target>
	
	<!-- Collect all sources and resources for docbook project in eccelerators-docbook/source/en folder -->
	<target name="collect-sources-for-docbook-transformation">
		<copy todir="submodules/eccelerators-docbook/source/en">
			<fileset dir="src/docbook">
				<include name="**/*.xml" />
			</fileset>
		</copy>
		<copy todir="submodules/eccelerators-docbook/source/en/resources" failonerror="false">
			<fileset dir="src/docbook/resources">
				<include name="**/*" />
			</fileset>
		</copy>
		<copy todir="submodules/eccelerators-docbook/source/en">
			<fileset dir="src-gen/docbook">
				<include name="**/*.xml" />
			</fileset>
		</copy>
		<copy todir="submodules/eccelerators-docbook/source/en/resources" failonerror="false">
			<fileset dir="src/rst/resources">
				<include name="**/*.png" />
			</fileset>
		</copy>
		<copy todir="submodules/eccelerators-docbook/source/en/resources" failonerror="false">
			<fileset dir="hxs/resources">
				<include name="**/*.png" />
			</fileset>
		</copy>
		<copy todir="submodules/eccelerators-docbook/source/en/resources">
			<fileset dir="src-gen/c">
				<include name="**/*.h" />
			</fileset>
		</copy>
	</target>

	<!-- Collect all sources and resources for docbook project in eccelerators-docbook/source/en folder -->	
	<target name="collect-sources-for-docbook-pdf-transformation">
		<copy todir="submodules/eccelerators-docbook/source/en">
			<fileset dir="src/docbook">
				<include name="**/*.xml" />
			</fileset>
		</copy>
		<copy todir="submodules/eccelerators-docbook/source/en/resources" failonerror="false">
			<fileset dir="src/docbook/resources">
				<include name="**/*" />
			</fileset>
		</copy>
		<copy todir="submodules/eccelerators-docbook/source/en">
			<fileset dir="src-gen/docbook">
				<include name="**/*.xml" />
			</fileset>
		</copy>
		<copy todir="submodules/eccelerators-docbook/source/en/resources" failonerror="false">
			<fileset dir="src/rst/resources">
				<include name="**/*.png" />
			</fileset>
		</copy>
		<copy todir="submodules/eccelerators-docbook/source/en/resources" failonerror="false">
			<fileset dir="hxs/resources">
				<include name="**/*.png" />
			</fileset>
		</copy>
		<exec executable="${python-executable}">		
			<arg value="submodules/break-docbook-program-listing/break-listing.py" />
			<arg value="--infile" />
			<arg value="src-gen/docbook/${ant.project.name}_c_code_preview.xml" />
			<arg value="--outfile" />
			<arg value="submodules/eccelerators-docbook/source/en/${ant.project.name}_c_code_preview.xml" />
			<arg value="--maxlines" />
			<arg value="40" />
		</exec>
		<exec executable="${python-executable}">			
			<arg value="submodules/break-docbook-program-listing/break-listing.py" />
			<arg value="--infile" />
			<arg value="src-gen/docbook/${ant.project.name}_python_code_preview.xml" />
			<arg value="--outfile" />
			<arg value="submodules/eccelerators-docbook/source/en/${ant.project.name}_python_code_preview.xml" />
			<arg value="--maxlines" />
			<arg value="40" />
		</exec>
		<exec executable="${python-executable}">			
			<arg value="submodules/break-docbook-program-listing/break-listing.py" />
			<arg value="--infile" />
			<arg value="src-gen/docbook/${ant.project.name}_simulation_code_preview.xml" />
			<arg value="--outfile" />
			<arg value="submodules/eccelerators-docbook/source/en/${ant.project.name}_simulation_code_preview.xml" />
			<arg value="--maxlines" />
			<arg value="40" />
		</exec>
	</target>
	
	<target name="hxs-hxs2rst" description="Build rst text description">
		<run_hxsc out-dir="src-gen/rst" extension="docs" in-files="${HXS_FILES_0}" />
		<if>
    		<isset property="HXS_FILES_1"/>
    		<then>
        		<run_hxsc out-dir="src-gen/rst" extension="docs" in-files="${HXS_FILES_1}" />
    		</then>
		</if>
		<if>
    		<isset property="${HXS_FILES_2}"/>
    		<then>
        		<run_hxsc out-dir="src-gen/rst" extension="docs" in-files="${HXS_FILES_2}" />
    		</then>
		</if>
		<if>
    		<isset property="${HXS_FILES_3}"/>
    		<then>
        		<run_hxsc out-dir="src-gen/rst" extension="docs" in-files="HXS_FILES_3" />
    		</then>
		</if>
		<delete failonerror="false">
			<fileset dir="src-gen/rst">
				<include name="**/*" />
				<exclude name="*CellBufferIfc*" />
				<exclude name="*${ant.project.name}*" />
			</fileset>
		</delete>
	</target>

	<target name="hxs-hxs2vhdl" description="Build vhdl files">
		<mkdir dir="src-gen/vhdl"/>
		<run_hxsc_gen_par out-dir="src-gen/vhdl" extension="vhdl" gen-par="vhdl.bus_type=${HXS_BUS_TYPE}" in-files="${HXS_FILES_0}" />
		<if>
    		<isset property="HXS_FILES_1"/>
    		<then>
        		<run_hxsc_gen_par out-dir="src-gen/vhdl" extension="vhdl" gen-par="vhdl.bus_type=${HXS_BUS_TYPE}" in-files="${HXS_FILES_1}" />
    		</then>
		</if>
		<if>
    		<isset property="${HXS_FILES_2}"/>
    		<then>
        		<run_hxsc_gen_par out-dir="src-gen/vhdl" extension="vhdl" gen-par="vhdl.bus_type=${HXS_BUS_TYPE}" in-files="${HXS_FILES_2}" />
    		</then>
		</if>
		<if>
    		<isset property="${HXS_FILES_3}"/>
    		<then>
        		<run_hxsc_gen_par out-dir="src-gen/vhdl" extension="vhdl" gen-par="vhdl.bus_type=${HXS_BUS_TYPE}" in-files="HXS_FILES_3" />
    		</then>
		</if>
		<delete failonerror="false">
			<fileset dir="src-gen/vhdl">
				<include name="**/*" />
				<exclude name="**/*${ant.project.name}*" />
				<exclude name="**/*CellBufferIfc*" />
			</fileset>
		</delete>
	</target>


	<target name="hxs-hxs2c" description="Build c files">
		<run_hxsc out-dir="src-gen/c" extension="c" in-files="${HXS_FILES_0}"/>
		<if>
    		<isset property="HXS_FILES_1"/>
    		<then>
        		<run_hxsc out-dir="src-gen/c" extension="c" in-files="${HXS_FILES_1}" />
    		</then>
		</if>
		<if>
    		<isset property="${HXS_FILES_2}"/>
    		<then>
        		<run_hxsc out-dir="src-gen/c" extension="c" in-files="${HXS_FILES_2}" />
    		</then>
		</if>
		<if>
    		<isset property="${HXS_FILES_3}"/>
    		<then>
        		<run_hxsc out-dir="src-gen/c" extension="c" in-files="HXS_FILES_3" />
    		</then>
		</if>
		<delete failonerror="false">
			<fileset dir="src-gen/c">
				<include name="**/*" />
				<exclude name="*${ant.project.name}*" />
				<exclude name="*CellBufferIfc*" />
			</fileset>
		</delete>
	</target>

	<target name="hxs-hxs2simstm" description="Build simstm files">
		<run_hxsc out-dir="src-gen/simstm" extension="simstm" in-files="${HXS_FILES_0}"/>
		<if>
    		<isset property="HXS_FILES_1"/>
    		<then>
        		<run_hxsc out-dir="src-gen/simstm" extension="simstm" in-files="${HXS_FILES_1}" />
    		</then>
		</if>
		<if>
    		<isset property="${HXS_FILES_2}"/>
    		<then>
        		<run_hxsc out-dir="src-gen/simstm" extension="simstm" in-files="${HXS_FILES_2}" />
    		</then>
		</if>
		<if>
    		<isset property="${HXS_FILES_3}"/>
    		<then>
        		<run_hxsc out-dir="src-gen/simstm" extension="simstm" in-files="HXS_FILES_3" />
    		</then>
		</if>
		<delete failonerror="false">
			<fileset dir="src-gen/simstm">
				<include name="**/*" />
				<exclude name="*${ant.project.name}*" />
				<exclude name="*CellBufferIfc*" />
			</fileset>
		</delete>
	</target>

	<target name="hxs-hxs2python" description="Build python files">
		<run_hxsc out-dir="src-gen/python" extension="python" in-files="${HXS_FILES_0}" />
		<if>
    		<isset property="HXS_FILES_1"/>
    		<then>
        		<run_hxsc out-dir="src-gen/python" extension="python" in-files="${HXS_FILES_1}" />
    		</then>
		</if>
		<if>
    		<isset property="${HXS_FILES_2}"/>
    		<then>
        		<run_hxsc out-dir="src-gen/python" extension="python" in-files="${HXS_FILES_2}" />
    		</then>
		</if>
		<if>
    		<isset property="${HXS_FILES_3}"/>
    		<then>
        		<run_hxsc out-dir="src-gen/python" extension="python" in-files="HXS_FILES_3" />
    		</then>
		</if>
		<delete failonerror="false">
			<fileset dir="src-gen/python">
				<include name="**/*" />
				<exclude name="*${ant.project.name}*" />
				<exclude name="*CellBufferIfc*" />
			</fileset>
		</delete>
	</target>
	
	<macrodef name="run_hxsc">
		<attribute name="out-dir" />
		<attribute name="extension" />
		<attribute name="in-files" />
		<sequential>
			<antcall target="-exec_hxsc_lin">
				<param name="out-dir" value="@{out-dir}" />
				<param name="extension" value="@{extension}" />
				<param name="in-files" value="@{in-files}" />
			</antcall>
			<antcall target="-exec_hxsc_win">
				<param name="out-dir" value="@{out-dir}" />
				<param name="extension" value="@{extension}" />
				<param name="in-files" value="@{in-files}" />
			</antcall>
		</sequential>
	</macrodef>
	<target name="-exec_hxsc_win" if="is_windows">
		<exec executable="hxsc.bat">
			<arg value="--out-dir" />
			<arg value="${out-dir}" />
			<arg value="${extension}" />
			<arg line="${in-files}" />
		</exec>
	</target>
	<target name="-exec_hxsc_lin" unless="is_windows">
		<exec executable="hxsc">
			<arg value="--out-dir" />
			<arg value="${out-dir}" />
			<arg value="${extension}" />
			<arg value="${in-files}" />
		</exec>
	</target>
		
	<macrodef name="run_hxsc_gen_par">
		<attribute name="out-dir" />
		<attribute name="extension" />
		<attribute name="gen-par" />
		<attribute name="in-files" />
		<sequential>
			<antcall target="-exec_hxsc_lin_gen_par">
				<param name="out-dir" value="@{out-dir}" />
				<param name="extension" value="@{extension}" />
				<param name="gen-par" value="@{gen-par}" />
				<param name="in-files" value="@{in-files}" />
			</antcall>
			<antcall target="-exec_hxsc_win_gen_par">
				<param name="out-dir" value="@{out-dir}" />
				<param name="extension" value="@{extension}" />
				<param name="gen-par" value="@{gen-par}" />
				<param name="in-files" value="@{in-files}" />
			</antcall>
		</sequential>
	</macrodef>
	<target name="-exec_hxsc_win_gen_par" if="is_windows">
		<exec executable="hxsc.bat">
			<arg value="--generator" />
			<arg value="${gen-par}" />
			<arg value="--out-dir" />
			<arg value="${out-dir}" />
			<arg value="${extension}" />
			<arg line="${in-files}" />
		</exec>
	</target>
	<target name="-exec_hxsc_lin_gen_par" unless="is_windows">
		<exec executable="hxsc">
			<arg value="--generator" />
			<arg value="${gen-par}" />
			<arg value="--out-dir" />
			<arg value="${out-dir}" />
			<arg value="${extension}" />
			<arg value="${in-files}" />
		</exec>
	</target>

</project>
